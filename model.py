#Importing the required libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Importing the dataset (stored as data.csv and sperated by ',')
dataset = pd.read_csv('data.csv', sep = ',') #read the csv
print(dataset.head())
X = dataset.drop(['Name', 'md5', 'legitimate'],axis=1).values
y = dataset['legitimate'].values

# Splitting the dataset
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0) #Splitting in 75/25 ratio

#Scaling the datset to convert into normalised values (i.e range in [0,1])
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#Using Random Forest Classifier Algorithm
from sklearn.ensemble import RandomForestClassifier
classifier = RandomForestClassifier(n_estimators = 50, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

#predict the test results
y_pred = classifier.predict(X_test)

#Implementing the confusion matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print('The Confusion matrix is: \n',cm)
r=cm[1][1]/(cm[1][1]+cm[1][0]) #recall calculation
p=cm[1][1]/(cm[1][1]+cm[0][1]) #Precision calculation
f_score = (2*r*p)/(r+p) #f score calculation
print("The percision % is ", p*100)
print("The recall % is ", r*100)
print("The f-score % is ", f_score*100)


from sklearn.metrics import accuracy_score
a=accuracy_score(y_test,y_pred)
print('The accuracy % of the algorithm is: ',a*100)
